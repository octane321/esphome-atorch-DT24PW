substitutions:
  name: battery-shunt
  #external_components_source: github://syssi/esphome-atorch-dl24@main    #orig repo
  #external_components_source: github://Foroxon/esphome-atorch-dl24@main   #DT24PW repo
  external_components_source: github://octane321/esphome-atorch-DT24PW@main   #DT24PW personal repo
  dl24_mac_address: !secret dl24_mac_address
  project_version: 1.2.0
  device_description: "Monitor and control a Atorch meter via bluetooth"
  prefix: TEST

esphome:
  name: ${name}
  comment: ${device_description}
  project:
    name: "syssi.esphome-atorch-dl24"
    version: ${project_version}

esp32:
  board: esp32dev
  framework:
    type: arduino

external_components:
  - source: ${external_components_source}
    refresh: 0s

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password
  manual_ip:
    # Set this to the IP of the ESP
    static_ip: 192.168.1.176
    # Set this to the IP address of the router. Often ends with .1
    gateway: 192.168.1.1
    # The subnet of the network. 255.255.255.0 works for most home networks.
    subnet: 255.255.255.0
    dns1: 192.168.1.1


  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "Battery-Shunt Fallback Hotspot"
    password: !secret wifi_password

captive_portal:

ota:
  password: !secret ota_password

# Enable logging
logger:
  level: DEBUG
#NONE
#ERROR
#WARN
#INFO
#DEBUG (Default)
#VERBOSE
#VERY_VERBOSE

mqtt:
  broker: !secret mqtt_host
  username: !secret mqtt_username
  password: !secret mqtt_password
  id: mqtt_client1234
  topic_prefix: ${prefix}
  discovery: false
  log_topic: ${prefix}/info/debug
  
  birth_message:
    topic: ${prefix}/info/status
    payload: online
  will_message:
    topic: ${prefix}/info/status
    payload: offline
esp32_ble_tracker:

ble_client:
  - mac_address: ${dl24_mac_address}
    id: ble_client0

atorch_dl24:
  - id: atorch0
    ble_client_id: ble_client0
    check_crc: true
    # The meter publishes a status report per second via BLE notification. If you don't like this update interval
    # you can use this setting to throttle the sensor updates by skipping some status reports.
    throttle: 1s

binary_sensor:
  - platform: atorch_dl24
    atorch_dl24_id: atorch0
    running:
      name: "running"
      state_topic: ${prefix}/Runtime
      retain: false

sensor:
  - platform: atorch_dl24
    atorch_dl24_id: atorch0
    voltage:
      name: "voltage"
      state_topic: ${prefix}/Voltage
      retain: false
    current:
      name: "current"
      state_topic: ${prefix}/Current
      retain: false
    power:
      name: "power"
      state_topic: ${prefix}/Power
      retain: false
    capacity:
      name: "capacity"
      state_topic: ${prefix}/Capacity
      retain: false
    energy:
      name: "energy"
      state_topic: ${prefix}/Energy
      retain: false
    temperature:
      name: "temperature"
      state_topic: ${prefix}/Temperature
      retain: false
    dim_backlight:
      name: "dim backlight"
      state_topic: ${prefix}/Backlight_time
      retain: false
    running:
      name: "running"
      state_topic: ${prefix}/Running
      retain: false
    runtime:
      name: "runtime"
      state_topic: ${prefix}/Runtime_sec
      retain: false

text_sensor:
  - platform: atorch_dl24
    atorch_dl24_id: atorch0
    runtime_formatted:
      name: "runtime formatted"
      state_topic: ${prefix}/Runtime
      retain: false

# If you use `mqtt` you can control a button if you publish the message "PRESS". The topic depends on
# the name of your ESPHome node and the name of the button entity:
#
# mosquitto_pub -t 'atorch-dc-meter/button/atorch-dc-meter_reset_energy/command' -m 'PRESS'
# mosquitto_pub -t 'atorch-dc-meter/button/atorch-dc-meter_reset_capacity/command' -m 'PRESS'
# mosquitto_pub -t 'atorch-dc-meter/button/atorch-dc-meter_reset_runtime/command' -m 'PRESS'
# mosquitto_pub -t 'atorch-dc-meter/button/atorch-dc-meter_reset_all/command' -m 'PRESS'
# ...

button:
  - platform: atorch_dl24
    atorch_dl24_id: atorch0
    reset_energy:
      name: "reset energy"
      state_topic: ${prefix}/button/reset energy
    reset_capacity:
      name: "reset capacity"
    reset_runtime:
      name: "${name} reset runtime"
    reset_all:
      name: "${name} reset all"
    plus:
      name: "${name} plus"
    minus:
      name: "${name} minus"
    setup:
      name: "${name} setup"
    enter:
      name: "${name} enter"
